// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: InputEventIndicationMessage.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_InputEventIndicationMessage_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_InputEventIndicationMessage_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "TouchEventData.pb.h"
#include "ButtonEventsData.pb.h"
#include "AbsoluteInputEventsData.pb.h"
#include "RelativeInputEventsData.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_InputEventIndicationMessage_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_InputEventIndicationMessage_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_InputEventIndicationMessage_2eproto;
namespace f1x {
namespace aasdk {
namespace proto {
namespace messages {
class InputEventIndication;
class InputEventIndicationDefaultTypeInternal;
extern InputEventIndicationDefaultTypeInternal _InputEventIndication_default_instance_;
}  // namespace messages
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x
PROTOBUF_NAMESPACE_OPEN
template<> ::f1x::aasdk::proto::messages::InputEventIndication* Arena::CreateMaybeMessage<::f1x::aasdk::proto::messages::InputEventIndication>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace f1x {
namespace aasdk {
namespace proto {
namespace messages {

// ===================================================================

class InputEventIndication PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:f1x.aasdk.proto.messages.InputEventIndication) */ {
 public:
  inline InputEventIndication() : InputEventIndication(nullptr) {};
  virtual ~InputEventIndication();

  InputEventIndication(const InputEventIndication& from);
  InputEventIndication(InputEventIndication&& from) noexcept
    : InputEventIndication() {
    *this = ::std::move(from);
  }

  inline InputEventIndication& operator=(const InputEventIndication& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputEventIndication& operator=(InputEventIndication&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const InputEventIndication& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputEventIndication* internal_default_instance() {
    return reinterpret_cast<const InputEventIndication*>(
               &_InputEventIndication_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(InputEventIndication& a, InputEventIndication& b) {
    a.Swap(&b);
  }
  inline void Swap(InputEventIndication* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InputEventIndication* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InputEventIndication* New() const final {
    return CreateMaybeMessage<InputEventIndication>(nullptr);
  }

  InputEventIndication* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InputEventIndication>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InputEventIndication& from);
  void MergeFrom(const InputEventIndication& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputEventIndication* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "f1x.aasdk.proto.messages.InputEventIndication";
  }
  protected:
  explicit InputEventIndication(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_InputEventIndicationMessage_2eproto);
    return ::descriptor_table_InputEventIndicationMessage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTouchEventFieldNumber = 3,
    kButtonEventFieldNumber = 4,
    kAbsoluteInputEventFieldNumber = 5,
    kRelativeInputEventFieldNumber = 6,
    kTimestampFieldNumber = 1,
    kDispChannelFieldNumber = 2,
  };
  // .f1x.aasdk.proto.data.TouchEvent touch_event = 3;
  bool has_touch_event() const;
  private:
  bool _internal_has_touch_event() const;
  public:
  void clear_touch_event();
  const ::f1x::aasdk::proto::data::TouchEvent& touch_event() const;
  ::f1x::aasdk::proto::data::TouchEvent* release_touch_event();
  ::f1x::aasdk::proto::data::TouchEvent* mutable_touch_event();
  void set_allocated_touch_event(::f1x::aasdk::proto::data::TouchEvent* touch_event);
  private:
  const ::f1x::aasdk::proto::data::TouchEvent& _internal_touch_event() const;
  ::f1x::aasdk::proto::data::TouchEvent* _internal_mutable_touch_event();
  public:
  void unsafe_arena_set_allocated_touch_event(
      ::f1x::aasdk::proto::data::TouchEvent* touch_event);
  ::f1x::aasdk::proto::data::TouchEvent* unsafe_arena_release_touch_event();

  // .f1x.aasdk.proto.data.ButtonEvents button_event = 4;
  bool has_button_event() const;
  private:
  bool _internal_has_button_event() const;
  public:
  void clear_button_event();
  const ::f1x::aasdk::proto::data::ButtonEvents& button_event() const;
  ::f1x::aasdk::proto::data::ButtonEvents* release_button_event();
  ::f1x::aasdk::proto::data::ButtonEvents* mutable_button_event();
  void set_allocated_button_event(::f1x::aasdk::proto::data::ButtonEvents* button_event);
  private:
  const ::f1x::aasdk::proto::data::ButtonEvents& _internal_button_event() const;
  ::f1x::aasdk::proto::data::ButtonEvents* _internal_mutable_button_event();
  public:
  void unsafe_arena_set_allocated_button_event(
      ::f1x::aasdk::proto::data::ButtonEvents* button_event);
  ::f1x::aasdk::proto::data::ButtonEvents* unsafe_arena_release_button_event();

  // .f1x.aasdk.proto.data.AbsoluteInputEvents absolute_input_event = 5;
  bool has_absolute_input_event() const;
  private:
  bool _internal_has_absolute_input_event() const;
  public:
  void clear_absolute_input_event();
  const ::f1x::aasdk::proto::data::AbsoluteInputEvents& absolute_input_event() const;
  ::f1x::aasdk::proto::data::AbsoluteInputEvents* release_absolute_input_event();
  ::f1x::aasdk::proto::data::AbsoluteInputEvents* mutable_absolute_input_event();
  void set_allocated_absolute_input_event(::f1x::aasdk::proto::data::AbsoluteInputEvents* absolute_input_event);
  private:
  const ::f1x::aasdk::proto::data::AbsoluteInputEvents& _internal_absolute_input_event() const;
  ::f1x::aasdk::proto::data::AbsoluteInputEvents* _internal_mutable_absolute_input_event();
  public:
  void unsafe_arena_set_allocated_absolute_input_event(
      ::f1x::aasdk::proto::data::AbsoluteInputEvents* absolute_input_event);
  ::f1x::aasdk::proto::data::AbsoluteInputEvents* unsafe_arena_release_absolute_input_event();

  // .f1x.aasdk.proto.data.RelativeInputEvents relative_input_event = 6;
  bool has_relative_input_event() const;
  private:
  bool _internal_has_relative_input_event() const;
  public:
  void clear_relative_input_event();
  const ::f1x::aasdk::proto::data::RelativeInputEvents& relative_input_event() const;
  ::f1x::aasdk::proto::data::RelativeInputEvents* release_relative_input_event();
  ::f1x::aasdk::proto::data::RelativeInputEvents* mutable_relative_input_event();
  void set_allocated_relative_input_event(::f1x::aasdk::proto::data::RelativeInputEvents* relative_input_event);
  private:
  const ::f1x::aasdk::proto::data::RelativeInputEvents& _internal_relative_input_event() const;
  ::f1x::aasdk::proto::data::RelativeInputEvents* _internal_mutable_relative_input_event();
  public:
  void unsafe_arena_set_allocated_relative_input_event(
      ::f1x::aasdk::proto::data::RelativeInputEvents* relative_input_event);
  ::f1x::aasdk::proto::data::RelativeInputEvents* unsafe_arena_release_relative_input_event();

  // uint64 timestamp = 1;
  void clear_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 timestamp() const;
  void set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_timestamp() const;
  void _internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 disp_channel = 2;
  void clear_disp_channel();
  ::PROTOBUF_NAMESPACE_ID::int32 disp_channel() const;
  void set_disp_channel(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_disp_channel() const;
  void _internal_set_disp_channel(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:f1x.aasdk.proto.messages.InputEventIndication)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::f1x::aasdk::proto::data::TouchEvent* touch_event_;
  ::f1x::aasdk::proto::data::ButtonEvents* button_event_;
  ::f1x::aasdk::proto::data::AbsoluteInputEvents* absolute_input_event_;
  ::f1x::aasdk::proto::data::RelativeInputEvents* relative_input_event_;
  ::PROTOBUF_NAMESPACE_ID::uint64 timestamp_;
  ::PROTOBUF_NAMESPACE_ID::int32 disp_channel_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_InputEventIndicationMessage_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// InputEventIndication

// uint64 timestamp = 1;
inline void InputEventIndication::clear_timestamp() {
  timestamp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 InputEventIndication::_internal_timestamp() const {
  return timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 InputEventIndication::timestamp() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.InputEventIndication.timestamp)
  return _internal_timestamp();
}
inline void InputEventIndication::_internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  timestamp_ = value;
}
inline void InputEventIndication::set_timestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.messages.InputEventIndication.timestamp)
}

// int32 disp_channel = 2;
inline void InputEventIndication::clear_disp_channel() {
  disp_channel_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputEventIndication::_internal_disp_channel() const {
  return disp_channel_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputEventIndication::disp_channel() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.InputEventIndication.disp_channel)
  return _internal_disp_channel();
}
inline void InputEventIndication::_internal_set_disp_channel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  disp_channel_ = value;
}
inline void InputEventIndication::set_disp_channel(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_disp_channel(value);
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.messages.InputEventIndication.disp_channel)
}

// .f1x.aasdk.proto.data.TouchEvent touch_event = 3;
inline bool InputEventIndication::_internal_has_touch_event() const {
  return this != internal_default_instance() && touch_event_ != nullptr;
}
inline bool InputEventIndication::has_touch_event() const {
  return _internal_has_touch_event();
}
inline const ::f1x::aasdk::proto::data::TouchEvent& InputEventIndication::_internal_touch_event() const {
  const ::f1x::aasdk::proto::data::TouchEvent* p = touch_event_;
  return p != nullptr ? *p : *reinterpret_cast<const ::f1x::aasdk::proto::data::TouchEvent*>(
      &::f1x::aasdk::proto::data::_TouchEvent_default_instance_);
}
inline const ::f1x::aasdk::proto::data::TouchEvent& InputEventIndication::touch_event() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.InputEventIndication.touch_event)
  return _internal_touch_event();
}
inline void InputEventIndication::unsafe_arena_set_allocated_touch_event(
    ::f1x::aasdk::proto::data::TouchEvent* touch_event) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(touch_event_);
  }
  touch_event_ = touch_event;
  if (touch_event) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:f1x.aasdk.proto.messages.InputEventIndication.touch_event)
}
inline ::f1x::aasdk::proto::data::TouchEvent* InputEventIndication::release_touch_event() {
  auto temp = unsafe_arena_release_touch_event();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::f1x::aasdk::proto::data::TouchEvent* InputEventIndication::unsafe_arena_release_touch_event() {
  // @@protoc_insertion_point(field_release:f1x.aasdk.proto.messages.InputEventIndication.touch_event)
  
  ::f1x::aasdk::proto::data::TouchEvent* temp = touch_event_;
  touch_event_ = nullptr;
  return temp;
}
inline ::f1x::aasdk::proto::data::TouchEvent* InputEventIndication::_internal_mutable_touch_event() {
  
  if (touch_event_ == nullptr) {
    auto* p = CreateMaybeMessage<::f1x::aasdk::proto::data::TouchEvent>(GetArena());
    touch_event_ = p;
  }
  return touch_event_;
}
inline ::f1x::aasdk::proto::data::TouchEvent* InputEventIndication::mutable_touch_event() {
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.InputEventIndication.touch_event)
  return _internal_mutable_touch_event();
}
inline void InputEventIndication::set_allocated_touch_event(::f1x::aasdk::proto::data::TouchEvent* touch_event) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(touch_event_);
  }
  if (touch_event) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(touch_event)->GetArena();
    if (message_arena != submessage_arena) {
      touch_event = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, touch_event, submessage_arena);
    }
    
  } else {
    
  }
  touch_event_ = touch_event;
  // @@protoc_insertion_point(field_set_allocated:f1x.aasdk.proto.messages.InputEventIndication.touch_event)
}

// .f1x.aasdk.proto.data.ButtonEvents button_event = 4;
inline bool InputEventIndication::_internal_has_button_event() const {
  return this != internal_default_instance() && button_event_ != nullptr;
}
inline bool InputEventIndication::has_button_event() const {
  return _internal_has_button_event();
}
inline const ::f1x::aasdk::proto::data::ButtonEvents& InputEventIndication::_internal_button_event() const {
  const ::f1x::aasdk::proto::data::ButtonEvents* p = button_event_;
  return p != nullptr ? *p : *reinterpret_cast<const ::f1x::aasdk::proto::data::ButtonEvents*>(
      &::f1x::aasdk::proto::data::_ButtonEvents_default_instance_);
}
inline const ::f1x::aasdk::proto::data::ButtonEvents& InputEventIndication::button_event() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.InputEventIndication.button_event)
  return _internal_button_event();
}
inline void InputEventIndication::unsafe_arena_set_allocated_button_event(
    ::f1x::aasdk::proto::data::ButtonEvents* button_event) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(button_event_);
  }
  button_event_ = button_event;
  if (button_event) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:f1x.aasdk.proto.messages.InputEventIndication.button_event)
}
inline ::f1x::aasdk::proto::data::ButtonEvents* InputEventIndication::release_button_event() {
  auto temp = unsafe_arena_release_button_event();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::f1x::aasdk::proto::data::ButtonEvents* InputEventIndication::unsafe_arena_release_button_event() {
  // @@protoc_insertion_point(field_release:f1x.aasdk.proto.messages.InputEventIndication.button_event)
  
  ::f1x::aasdk::proto::data::ButtonEvents* temp = button_event_;
  button_event_ = nullptr;
  return temp;
}
inline ::f1x::aasdk::proto::data::ButtonEvents* InputEventIndication::_internal_mutable_button_event() {
  
  if (button_event_ == nullptr) {
    auto* p = CreateMaybeMessage<::f1x::aasdk::proto::data::ButtonEvents>(GetArena());
    button_event_ = p;
  }
  return button_event_;
}
inline ::f1x::aasdk::proto::data::ButtonEvents* InputEventIndication::mutable_button_event() {
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.InputEventIndication.button_event)
  return _internal_mutable_button_event();
}
inline void InputEventIndication::set_allocated_button_event(::f1x::aasdk::proto::data::ButtonEvents* button_event) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(button_event_);
  }
  if (button_event) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(button_event)->GetArena();
    if (message_arena != submessage_arena) {
      button_event = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, button_event, submessage_arena);
    }
    
  } else {
    
  }
  button_event_ = button_event;
  // @@protoc_insertion_point(field_set_allocated:f1x.aasdk.proto.messages.InputEventIndication.button_event)
}

// .f1x.aasdk.proto.data.AbsoluteInputEvents absolute_input_event = 5;
inline bool InputEventIndication::_internal_has_absolute_input_event() const {
  return this != internal_default_instance() && absolute_input_event_ != nullptr;
}
inline bool InputEventIndication::has_absolute_input_event() const {
  return _internal_has_absolute_input_event();
}
inline const ::f1x::aasdk::proto::data::AbsoluteInputEvents& InputEventIndication::_internal_absolute_input_event() const {
  const ::f1x::aasdk::proto::data::AbsoluteInputEvents* p = absolute_input_event_;
  return p != nullptr ? *p : *reinterpret_cast<const ::f1x::aasdk::proto::data::AbsoluteInputEvents*>(
      &::f1x::aasdk::proto::data::_AbsoluteInputEvents_default_instance_);
}
inline const ::f1x::aasdk::proto::data::AbsoluteInputEvents& InputEventIndication::absolute_input_event() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.InputEventIndication.absolute_input_event)
  return _internal_absolute_input_event();
}
inline void InputEventIndication::unsafe_arena_set_allocated_absolute_input_event(
    ::f1x::aasdk::proto::data::AbsoluteInputEvents* absolute_input_event) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(absolute_input_event_);
  }
  absolute_input_event_ = absolute_input_event;
  if (absolute_input_event) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:f1x.aasdk.proto.messages.InputEventIndication.absolute_input_event)
}
inline ::f1x::aasdk::proto::data::AbsoluteInputEvents* InputEventIndication::release_absolute_input_event() {
  auto temp = unsafe_arena_release_absolute_input_event();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::f1x::aasdk::proto::data::AbsoluteInputEvents* InputEventIndication::unsafe_arena_release_absolute_input_event() {
  // @@protoc_insertion_point(field_release:f1x.aasdk.proto.messages.InputEventIndication.absolute_input_event)
  
  ::f1x::aasdk::proto::data::AbsoluteInputEvents* temp = absolute_input_event_;
  absolute_input_event_ = nullptr;
  return temp;
}
inline ::f1x::aasdk::proto::data::AbsoluteInputEvents* InputEventIndication::_internal_mutable_absolute_input_event() {
  
  if (absolute_input_event_ == nullptr) {
    auto* p = CreateMaybeMessage<::f1x::aasdk::proto::data::AbsoluteInputEvents>(GetArena());
    absolute_input_event_ = p;
  }
  return absolute_input_event_;
}
inline ::f1x::aasdk::proto::data::AbsoluteInputEvents* InputEventIndication::mutable_absolute_input_event() {
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.InputEventIndication.absolute_input_event)
  return _internal_mutable_absolute_input_event();
}
inline void InputEventIndication::set_allocated_absolute_input_event(::f1x::aasdk::proto::data::AbsoluteInputEvents* absolute_input_event) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(absolute_input_event_);
  }
  if (absolute_input_event) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(absolute_input_event)->GetArena();
    if (message_arena != submessage_arena) {
      absolute_input_event = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, absolute_input_event, submessage_arena);
    }
    
  } else {
    
  }
  absolute_input_event_ = absolute_input_event;
  // @@protoc_insertion_point(field_set_allocated:f1x.aasdk.proto.messages.InputEventIndication.absolute_input_event)
}

// .f1x.aasdk.proto.data.RelativeInputEvents relative_input_event = 6;
inline bool InputEventIndication::_internal_has_relative_input_event() const {
  return this != internal_default_instance() && relative_input_event_ != nullptr;
}
inline bool InputEventIndication::has_relative_input_event() const {
  return _internal_has_relative_input_event();
}
inline const ::f1x::aasdk::proto::data::RelativeInputEvents& InputEventIndication::_internal_relative_input_event() const {
  const ::f1x::aasdk::proto::data::RelativeInputEvents* p = relative_input_event_;
  return p != nullptr ? *p : *reinterpret_cast<const ::f1x::aasdk::proto::data::RelativeInputEvents*>(
      &::f1x::aasdk::proto::data::_RelativeInputEvents_default_instance_);
}
inline const ::f1x::aasdk::proto::data::RelativeInputEvents& InputEventIndication::relative_input_event() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.InputEventIndication.relative_input_event)
  return _internal_relative_input_event();
}
inline void InputEventIndication::unsafe_arena_set_allocated_relative_input_event(
    ::f1x::aasdk::proto::data::RelativeInputEvents* relative_input_event) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(relative_input_event_);
  }
  relative_input_event_ = relative_input_event;
  if (relative_input_event) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:f1x.aasdk.proto.messages.InputEventIndication.relative_input_event)
}
inline ::f1x::aasdk::proto::data::RelativeInputEvents* InputEventIndication::release_relative_input_event() {
  auto temp = unsafe_arena_release_relative_input_event();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::f1x::aasdk::proto::data::RelativeInputEvents* InputEventIndication::unsafe_arena_release_relative_input_event() {
  // @@protoc_insertion_point(field_release:f1x.aasdk.proto.messages.InputEventIndication.relative_input_event)
  
  ::f1x::aasdk::proto::data::RelativeInputEvents* temp = relative_input_event_;
  relative_input_event_ = nullptr;
  return temp;
}
inline ::f1x::aasdk::proto::data::RelativeInputEvents* InputEventIndication::_internal_mutable_relative_input_event() {
  
  if (relative_input_event_ == nullptr) {
    auto* p = CreateMaybeMessage<::f1x::aasdk::proto::data::RelativeInputEvents>(GetArena());
    relative_input_event_ = p;
  }
  return relative_input_event_;
}
inline ::f1x::aasdk::proto::data::RelativeInputEvents* InputEventIndication::mutable_relative_input_event() {
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.InputEventIndication.relative_input_event)
  return _internal_mutable_relative_input_event();
}
inline void InputEventIndication::set_allocated_relative_input_event(::f1x::aasdk::proto::data::RelativeInputEvents* relative_input_event) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(relative_input_event_);
  }
  if (relative_input_event) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(relative_input_event)->GetArena();
    if (message_arena != submessage_arena) {
      relative_input_event = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, relative_input_event, submessage_arena);
    }
    
  } else {
    
  }
  relative_input_event_ = relative_input_event;
  // @@protoc_insertion_point(field_set_allocated:f1x.aasdk.proto.messages.InputEventIndication.relative_input_event)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace messages
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_InputEventIndicationMessage_2eproto

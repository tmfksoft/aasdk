// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AVInputOpenRequestMessage.proto

#include "AVInputOpenRequestMessage.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace f1x {
namespace aasdk {
namespace proto {
namespace messages {
class AVInputOpenRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AVInputOpenRequest> _instance;
} _AVInputOpenRequest_default_instance_;
}  // namespace messages
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x
static void InitDefaultsscc_info_AVInputOpenRequest_AVInputOpenRequestMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::f1x::aasdk::proto::messages::_AVInputOpenRequest_default_instance_;
    new (ptr) ::f1x::aasdk::proto::messages::AVInputOpenRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::f1x::aasdk::proto::messages::AVInputOpenRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AVInputOpenRequest_AVInputOpenRequestMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AVInputOpenRequest_AVInputOpenRequestMessage_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_AVInputOpenRequestMessage_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_AVInputOpenRequestMessage_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_AVInputOpenRequestMessage_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_AVInputOpenRequestMessage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::f1x::aasdk::proto::messages::AVInputOpenRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::f1x::aasdk::proto::messages::AVInputOpenRequest, open_),
  PROTOBUF_FIELD_OFFSET(::f1x::aasdk::proto::messages::AVInputOpenRequest, anc_),
  PROTOBUF_FIELD_OFFSET(::f1x::aasdk::proto::messages::AVInputOpenRequest, ec_),
  PROTOBUF_FIELD_OFFSET(::f1x::aasdk::proto::messages::AVInputOpenRequest, max_unacked_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::f1x::aasdk::proto::messages::AVInputOpenRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::f1x::aasdk::proto::messages::_AVInputOpenRequest_default_instance_),
};

const char descriptor_table_protodef_AVInputOpenRequestMessage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\037AVInputOpenRequestMessage.proto\022\030f1x.a"
  "asdk.proto.messages\"P\n\022AVInputOpenReques"
  "t\022\014\n\004open\030\001 \001(\010\022\013\n\003anc\030\002 \001(\010\022\n\n\002ec\030\003 \001(\010"
  "\022\023\n\013max_unacked\030\004 \001(\005b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_AVInputOpenRequestMessage_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_AVInputOpenRequestMessage_2eproto_sccs[1] = {
  &scc_info_AVInputOpenRequest_AVInputOpenRequestMessage_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_AVInputOpenRequestMessage_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_AVInputOpenRequestMessage_2eproto = {
  false, false, descriptor_table_protodef_AVInputOpenRequestMessage_2eproto, "AVInputOpenRequestMessage.proto", 149,
  &descriptor_table_AVInputOpenRequestMessage_2eproto_once, descriptor_table_AVInputOpenRequestMessage_2eproto_sccs, descriptor_table_AVInputOpenRequestMessage_2eproto_deps, 1, 0,
  schemas, file_default_instances, TableStruct_AVInputOpenRequestMessage_2eproto::offsets,
  file_level_metadata_AVInputOpenRequestMessage_2eproto, 1, file_level_enum_descriptors_AVInputOpenRequestMessage_2eproto, file_level_service_descriptors_AVInputOpenRequestMessage_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_AVInputOpenRequestMessage_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_AVInputOpenRequestMessage_2eproto)), true);
namespace f1x {
namespace aasdk {
namespace proto {
namespace messages {

// ===================================================================

void AVInputOpenRequest::InitAsDefaultInstance() {
}
class AVInputOpenRequest::_Internal {
 public:
};

AVInputOpenRequest::AVInputOpenRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:f1x.aasdk.proto.messages.AVInputOpenRequest)
}
AVInputOpenRequest::AVInputOpenRequest(const AVInputOpenRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&open_, &from.open_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_unacked_) -
    reinterpret_cast<char*>(&open_)) + sizeof(max_unacked_));
  // @@protoc_insertion_point(copy_constructor:f1x.aasdk.proto.messages.AVInputOpenRequest)
}

void AVInputOpenRequest::SharedCtor() {
  ::memset(&open_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_unacked_) -
      reinterpret_cast<char*>(&open_)) + sizeof(max_unacked_));
}

AVInputOpenRequest::~AVInputOpenRequest() {
  // @@protoc_insertion_point(destructor:f1x.aasdk.proto.messages.AVInputOpenRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AVInputOpenRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AVInputOpenRequest::ArenaDtor(void* object) {
  AVInputOpenRequest* _this = reinterpret_cast< AVInputOpenRequest* >(object);
  (void)_this;
}
void AVInputOpenRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AVInputOpenRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AVInputOpenRequest& AVInputOpenRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AVInputOpenRequest_AVInputOpenRequestMessage_2eproto.base);
  return *internal_default_instance();
}


void AVInputOpenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:f1x.aasdk.proto.messages.AVInputOpenRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&open_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_unacked_) -
      reinterpret_cast<char*>(&open_)) + sizeof(max_unacked_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AVInputOpenRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool open = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          open_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool anc = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          anc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool ec = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ec_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 max_unacked = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          max_unacked_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AVInputOpenRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:f1x.aasdk.proto.messages.AVInputOpenRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool open = 1;
  if (this->open() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_open(), target);
  }

  // bool anc = 2;
  if (this->anc() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_anc(), target);
  }

  // bool ec = 3;
  if (this->ec() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_ec(), target);
  }

  // int32 max_unacked = 4;
  if (this->max_unacked() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_max_unacked(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:f1x.aasdk.proto.messages.AVInputOpenRequest)
  return target;
}

size_t AVInputOpenRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:f1x.aasdk.proto.messages.AVInputOpenRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool open = 1;
  if (this->open() != 0) {
    total_size += 1 + 1;
  }

  // bool anc = 2;
  if (this->anc() != 0) {
    total_size += 1 + 1;
  }

  // bool ec = 3;
  if (this->ec() != 0) {
    total_size += 1 + 1;
  }

  // int32 max_unacked = 4;
  if (this->max_unacked() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_max_unacked());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AVInputOpenRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:f1x.aasdk.proto.messages.AVInputOpenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AVInputOpenRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AVInputOpenRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:f1x.aasdk.proto.messages.AVInputOpenRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:f1x.aasdk.proto.messages.AVInputOpenRequest)
    MergeFrom(*source);
  }
}

void AVInputOpenRequest::MergeFrom(const AVInputOpenRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:f1x.aasdk.proto.messages.AVInputOpenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.open() != 0) {
    _internal_set_open(from._internal_open());
  }
  if (from.anc() != 0) {
    _internal_set_anc(from._internal_anc());
  }
  if (from.ec() != 0) {
    _internal_set_ec(from._internal_ec());
  }
  if (from.max_unacked() != 0) {
    _internal_set_max_unacked(from._internal_max_unacked());
  }
}

void AVInputOpenRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:f1x.aasdk.proto.messages.AVInputOpenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AVInputOpenRequest::CopyFrom(const AVInputOpenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:f1x.aasdk.proto.messages.AVInputOpenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AVInputOpenRequest::IsInitialized() const {
  return true;
}

void AVInputOpenRequest::InternalSwap(AVInputOpenRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AVInputOpenRequest, max_unacked_)
      + sizeof(AVInputOpenRequest::max_unacked_)
      - PROTOBUF_FIELD_OFFSET(AVInputOpenRequest, open_)>(
          reinterpret_cast<char*>(&open_),
          reinterpret_cast<char*>(&other->open_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AVInputOpenRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace messages
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::f1x::aasdk::proto::messages::AVInputOpenRequest* Arena::CreateMaybeMessage< ::f1x::aasdk::proto::messages::AVInputOpenRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::f1x::aasdk::proto::messages::AVInputOpenRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

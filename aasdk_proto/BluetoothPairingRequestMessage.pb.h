// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BluetoothPairingRequestMessage.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_BluetoothPairingRequestMessage_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_BluetoothPairingRequestMessage_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "BluetoothPairingMethodEnum.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_BluetoothPairingRequestMessage_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_BluetoothPairingRequestMessage_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_BluetoothPairingRequestMessage_2eproto;
namespace f1x {
namespace aasdk {
namespace proto {
namespace messages {
class BluetoothPairingRequest;
class BluetoothPairingRequestDefaultTypeInternal;
extern BluetoothPairingRequestDefaultTypeInternal _BluetoothPairingRequest_default_instance_;
}  // namespace messages
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x
PROTOBUF_NAMESPACE_OPEN
template<> ::f1x::aasdk::proto::messages::BluetoothPairingRequest* Arena::CreateMaybeMessage<::f1x::aasdk::proto::messages::BluetoothPairingRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace f1x {
namespace aasdk {
namespace proto {
namespace messages {

// ===================================================================

class BluetoothPairingRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:f1x.aasdk.proto.messages.BluetoothPairingRequest) */ {
 public:
  inline BluetoothPairingRequest() : BluetoothPairingRequest(nullptr) {};
  virtual ~BluetoothPairingRequest();

  BluetoothPairingRequest(const BluetoothPairingRequest& from);
  BluetoothPairingRequest(BluetoothPairingRequest&& from) noexcept
    : BluetoothPairingRequest() {
    *this = ::std::move(from);
  }

  inline BluetoothPairingRequest& operator=(const BluetoothPairingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline BluetoothPairingRequest& operator=(BluetoothPairingRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BluetoothPairingRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BluetoothPairingRequest* internal_default_instance() {
    return reinterpret_cast<const BluetoothPairingRequest*>(
               &_BluetoothPairingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(BluetoothPairingRequest& a, BluetoothPairingRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(BluetoothPairingRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BluetoothPairingRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BluetoothPairingRequest* New() const final {
    return CreateMaybeMessage<BluetoothPairingRequest>(nullptr);
  }

  BluetoothPairingRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BluetoothPairingRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BluetoothPairingRequest& from);
  void MergeFrom(const BluetoothPairingRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BluetoothPairingRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "f1x.aasdk.proto.messages.BluetoothPairingRequest";
  }
  protected:
  explicit BluetoothPairingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_BluetoothPairingRequestMessage_2eproto);
    return ::descriptor_table_BluetoothPairingRequestMessage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPhoneAddressFieldNumber = 1,
    kPairingMethodFieldNumber = 2,
  };
  // string phone_address = 1;
  void clear_phone_address();
  const std::string& phone_address() const;
  void set_phone_address(const std::string& value);
  void set_phone_address(std::string&& value);
  void set_phone_address(const char* value);
  void set_phone_address(const char* value, size_t size);
  std::string* mutable_phone_address();
  std::string* release_phone_address();
  void set_allocated_phone_address(std::string* phone_address);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_phone_address();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_phone_address(
      std::string* phone_address);
  private:
  const std::string& _internal_phone_address() const;
  void _internal_set_phone_address(const std::string& value);
  std::string* _internal_mutable_phone_address();
  public:

  // .f1x.aasdk.proto.enums.BluetoothPairingMethod.Enum pairing_method = 2;
  void clear_pairing_method();
  ::f1x::aasdk::proto::enums::BluetoothPairingMethod_Enum pairing_method() const;
  void set_pairing_method(::f1x::aasdk::proto::enums::BluetoothPairingMethod_Enum value);
  private:
  ::f1x::aasdk::proto::enums::BluetoothPairingMethod_Enum _internal_pairing_method() const;
  void _internal_set_pairing_method(::f1x::aasdk::proto::enums::BluetoothPairingMethod_Enum value);
  public:

  // @@protoc_insertion_point(class_scope:f1x.aasdk.proto.messages.BluetoothPairingRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr phone_address_;
  int pairing_method_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_BluetoothPairingRequestMessage_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BluetoothPairingRequest

// string phone_address = 1;
inline void BluetoothPairingRequest::clear_phone_address() {
  phone_address_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& BluetoothPairingRequest::phone_address() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.BluetoothPairingRequest.phone_address)
  return _internal_phone_address();
}
inline void BluetoothPairingRequest::set_phone_address(const std::string& value) {
  _internal_set_phone_address(value);
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.messages.BluetoothPairingRequest.phone_address)
}
inline std::string* BluetoothPairingRequest::mutable_phone_address() {
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.BluetoothPairingRequest.phone_address)
  return _internal_mutable_phone_address();
}
inline const std::string& BluetoothPairingRequest::_internal_phone_address() const {
  return phone_address_.Get();
}
inline void BluetoothPairingRequest::_internal_set_phone_address(const std::string& value) {
  
  phone_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void BluetoothPairingRequest::set_phone_address(std::string&& value) {
  
  phone_address_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:f1x.aasdk.proto.messages.BluetoothPairingRequest.phone_address)
}
inline void BluetoothPairingRequest::set_phone_address(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  phone_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:f1x.aasdk.proto.messages.BluetoothPairingRequest.phone_address)
}
inline void BluetoothPairingRequest::set_phone_address(const char* value,
    size_t size) {
  
  phone_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:f1x.aasdk.proto.messages.BluetoothPairingRequest.phone_address)
}
inline std::string* BluetoothPairingRequest::_internal_mutable_phone_address() {
  
  return phone_address_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* BluetoothPairingRequest::release_phone_address() {
  // @@protoc_insertion_point(field_release:f1x.aasdk.proto.messages.BluetoothPairingRequest.phone_address)
  return phone_address_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void BluetoothPairingRequest::set_allocated_phone_address(std::string* phone_address) {
  if (phone_address != nullptr) {
    
  } else {
    
  }
  phone_address_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), phone_address,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:f1x.aasdk.proto.messages.BluetoothPairingRequest.phone_address)
}
inline std::string* BluetoothPairingRequest::unsafe_arena_release_phone_address() {
  // @@protoc_insertion_point(field_unsafe_arena_release:f1x.aasdk.proto.messages.BluetoothPairingRequest.phone_address)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return phone_address_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void BluetoothPairingRequest::unsafe_arena_set_allocated_phone_address(
    std::string* phone_address) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (phone_address != nullptr) {
    
  } else {
    
  }
  phone_address_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      phone_address, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:f1x.aasdk.proto.messages.BluetoothPairingRequest.phone_address)
}

// .f1x.aasdk.proto.enums.BluetoothPairingMethod.Enum pairing_method = 2;
inline void BluetoothPairingRequest::clear_pairing_method() {
  pairing_method_ = 0;
}
inline ::f1x::aasdk::proto::enums::BluetoothPairingMethod_Enum BluetoothPairingRequest::_internal_pairing_method() const {
  return static_cast< ::f1x::aasdk::proto::enums::BluetoothPairingMethod_Enum >(pairing_method_);
}
inline ::f1x::aasdk::proto::enums::BluetoothPairingMethod_Enum BluetoothPairingRequest::pairing_method() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.BluetoothPairingRequest.pairing_method)
  return _internal_pairing_method();
}
inline void BluetoothPairingRequest::_internal_set_pairing_method(::f1x::aasdk::proto::enums::BluetoothPairingMethod_Enum value) {
  
  pairing_method_ = value;
}
inline void BluetoothPairingRequest::set_pairing_method(::f1x::aasdk::proto::enums::BluetoothPairingMethod_Enum value) {
  _internal_set_pairing_method(value);
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.messages.BluetoothPairingRequest.pairing_method)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace messages
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_BluetoothPairingRequestMessage_2eproto
